# Copyright 2019 Oath Inc.
# Licensed under the terms of the Apache license. Please see LICENSE.md file distributed with this work for terms.

# Application configuration must specify a package name.  This prefix applies to all config properties.
package_name = bard

moduleDependencies = luthier

bard__version = Local Mode
bard__resource_binder = com.yahoo.bard.webservice.application.LuthierBinderFactory

bard__druid_broker = http://localhost:8082/druid/v2
bard__druid_coord = http://localhost:8081/druid/coordinator/v1

# Fili port for local application
bard__fili_port = 9012

# Disabling the druid dimension loader by default
# When set to true you will also need to populate the list of dimensions using druid_dim_loader_dimensions
bard__druid_dimensions_loader_enabled = false

# Storage backend for dimensions.  One of "memory", "redis"
bard__dimension_backend = memory

# Data Cache strategy, whose value is one of the following
# 1. ETag
#    This is the same thing as LocalSignature except that Etag optimizes to avoid the possibility of cache out-of-sync
#    problem. ETag relies on Druid to generate the signature(hash) instead of Fili
# 2. LocalSignature (cache V2, deprecated)
#    Maintains a mapping of (query, druidSegmentHash) -> DruidResponse. When a query comes in, Fili finds and computes
#    hash of all segments involved in that query. The query itself and the segment hash are combined together as the
#    cache key. If it's a new query or Druid reprocessed so that the segments change, there won't be a cache key in the
#    mapping and Fili talks to Druid to get new result. There is a possibility of cache out-of-sync problem when Druid
#    reprocesses and the segment scanner updates
# 3. Ttl (cache V1, deprecated)
#    "Ttl" stands for "Time to live". This strategy does NOT account for reprocessing. If you run a query, a cache is
#    generated with a TTL period. Until the cache entry expires(TTL > 0), same result will be sent back on the same
#    query; this is the case even when Druid has updated its data(result). Client using this cache strategy can
#    potentially receive stale results until the cache entry for that query expires.
# 4. NoCache

# Whether partial data or volatile data should be cached or not
bard__cache_partial_data = false

# Flag to enable usage of metadata supplied by the druid coordinator
# It requires coordinator URL (bard__druid_coord) to be set
bard__druid_coordinator_metadata_enabled = false

# Lucene index files path
bard__lucene_index_path = ./target/tmp/lucene-default/

# Maximum number of druid filters in a Fili-generated Druid query
bard__max_num_druid_filters = 10000

# max results without filters
# Default number of records per-page. This applies ONLY to the dimensions endpoint, NOT to the data endpoint. The
# data endpoint does not paginate by default.
bard__default_per_page = 10000

# Intersection reporting enabled or not.
bard__intersection_reporting_enabled = false

# Enable permissive partial data, marking things as partial only when no metrics are available rather then when only one is not available
bard__permissive_column_availability_enabled = false

# Enable TopN optimization
bard__top_n_enabled = true

# Flag to turn on case sensitive keys in keyvalue store
bard__case_sensitive_keys_enabled = false

# If this flag is set to true, InFilter will be used as the default filter. Else OrFilter will be used as the default filter.
bard__default_in_filter_enabled = false

# Whether or not to require metrics in queries. Older druid versions require
bard__require_metrics_in_query = true

bard__luthier_app=wikiApp
